{"version":3,"sources":["mainMenu.js","difficulty.js","ingame.js","reportWebVitals.js","index.js"],"names":["MainMenu","props","id","ref","mainMenuRef","onSubmit","e","preventDefault","start","startGame","type","placeholder","onChange","handleChange","required","value","DifficultyMenu","changeValues","onClick","changeDifficultyValue","resetChances","difficultyToIngame","className","difficultyRef","username","name","Ingame","useEffect","difficulty","changeMax","changeRange","randomiser","Math","floor","random","parseInt","difficultyValue","changeRandomNumber","console","log","setRandomNumber","changeMin","updateRange","userInput","ingameRef","hint","min","max","limitBeforeRef","rangeRef","limitAfterRef","chances","resetInput","randomNumber","setHint","setResultResponse","ingameToResult","subtractChances","onChangeInput","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Result","resultRef","resultResponse","resultToMain","reset","App","useState","setUsername","setDifficulty","setDifficultyValue","minRange","setMinRange","maxRange","setMaxRange","setChances","setUserInput","useRef","target","current","style","flex","el","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ef434c5.chunk.js","sourcesContent":["export function MainMenu(props){\n\n  function startGame(e){\n    e.preventDefault();\n    props.start();\n  }\n\n    return <div id=\"mainMenu\" ref={props.mainMenuRef}>\n      <h1>Number Guessing Game</h1>\n      <form onSubmit={e => {startGame(e)}}>\n        <input type=\"text\" placeholder=\"Enter Name\" onChange={props.handleChange} required/>\n        <br/><br/>\n        <input type=\"submit\" value=\"Start\"/>\n      </form>\n    </div>;\n}","export function DifficultyMenu(props){\n\n    function changeValues(e){\n        props.onClick(e);\n        props.changeDifficultyValue(e);\n        props.resetChances();\n        props.difficultyToIngame();\n    }\n\n    return <div id=\"difficulty\" className=\"hide\" ref={props.difficultyRef}>\n      <p>Greetings, {props.username}!</p>\n      <h3>Difficulty</h3>\n      <button onClick={e => {changeValues(e)}} value=\"easy\" name=\"100\">Easy</button>\n      <button onClick={e => {changeValues(e)}} value=\"normal\" name=\"1000\">Normal</button>\n      <button onClick={e => {changeValues(e)}} value=\"hard\" name=\"10000\">Hard</button>\n    </div>;\n  }","import { useEffect } from \"react\";\n\nexport function Ingame(props){\n\n    function changeRange(){\n        switch(props.difficulty){\n            case 'easy':\n                props.changeMax(100);\n                break;\n\n            case 'normal':\n                props.changeMax(1000);\n                break;\n\n            case 'hard':\n                props.changeMax(10000);\n                break;\n        }\n\n    }\n\n    function setRandomNumber(){\n        let randomiser = Math.floor(Math.random()*parseInt(props.difficultyValue));\n        props.changeRandomNumber(randomiser);\n        console.log(randomiser);\n    }\n\n    useEffect(() => {\n        changeRange();\n        setRandomNumber();\n        props.changeMin(0);\n    }, [props.difficulty]);\n\n    useEffect(() => {\n        props.updateRange();\n    }, [props.userInput])\n\n    function checkAnswer(e){\n        e.preventDefault();\n        props.resetInput();\n\n        if(parseInt(props.userInput) < props.randomNumber){\n            props.setHint(\"Guess is Lower\");\n            props.changeMin(parseInt(props.userInput)+1);\n\n        } else if(parseInt(props.userInput) > props.randomNumber){\n            props.setHint(\"Guess is Higher\");\n            props.changeMax(parseInt(props.userInput)-1);\n\n        }\n\n        if(parseInt(props.userInput) === props.randomNumber){\n            props.setResultResponse(\"Congrats! You guessed the number\");\n            props.ingameToResult();\n        } else {\n            props.subtractChances();\n\n            if(parseInt(props.chances) === 1){\n                props.setResultResponse(\"GAME OVER\");\n                props.ingameToResult();\n            }\n        }\n    }\n\n    return <div id=\"ingame\" className=\"hide\" ref={props.ingameRef}>\n      <h3>{props.hint}</h3>\n      <p id=\"rangeText\">Current Range: {props.min} - {props.max}</p>\n      <div id=\"bar\">\n        <div id=\"limitBefore\" ref={props.limitBeforeRef}></div>\n        <div id=\"range\" ref={props.rangeRef}></div>\n        <div id=\"limitAfter\" ref={props.limitAfterRef}></div>\n      </div>\n      <p id=\"chances\">Chances: {props.chances}</p>\n      <form onSubmit={checkAnswer}>\n        <input type=\"number\" min={props.min} \n        max={props.max} onChange={props.onChangeInput} \n        value={props.userInput} required/>\n        <input type=\"submit\" value=\"Guess\"/>\n      </form>\n    </div>;\n  }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { useState,useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport { MainMenu } from './mainMenu.js';\nimport { DifficultyMenu } from './difficulty.js';\nimport { Ingame } from './ingame.js';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nfunction Result(props){\n  return <div id=\"result\" className=\"hide\" ref={props.resultRef}>\n    <h3>{props.resultResponse}</h3>\n    <p>The number was {props.randomNumber}</p>\n    <button onClick={() => {props.resultToMain(); props.reset()}}>Play Again</button>\n  </div>;\n}\n\nfunction Leaderboard(){\n  return <div></div>;\n}\n\n\nfunction App(){\n\n  let [username, setUsername] = useState(\"\");\n  function changeUsername(e){setUsername(e.target.value)}\n\n  let [difficulty, setDifficulty] = useState(\"\");\n  function changeDifficulty(e){setDifficulty(e.target.value);}\n\n  let [difficultyValue, setDifficultyValue] = useState(100);\n  function changeDifficultyValue(e){setDifficultyValue(e.target.name)}\n\n  let [minRange, setMinRange] = useState(0);\n  function changeMin(value){setMinRange(value)}\n\n  let [maxRange, setMaxRange] = useState(100);\n  function changeMax(value){setMaxRange(value)}\n\n  let [randomNumber, setRandomNumber] = useState(0);\n  function changeRandomNumber(value){setRandomNumber(value)}\n\n  let [hint, setHint] = useState(\"Guess The Number!\");\n\n  let [chances, setChances] = useState(10);\n  function subtractChances(){setChances(chances-1)}\n  function resetChances(){setChances(10)}\n\n  let [userInput, setUserInput] = useState(\"\");\n  function onChangeInput(e){setUserInput(e.target.value)}\n  function resetInput(){setUserInput(\"\")}\n\n  let [resultResponse, setResultResponse] = useState(\"\");\n\n  function reset(){\n    setDifficulty(\"\");\n    setDifficultyValue(100);\n    setMinRange(0);\n    setMaxRange(100);\n    setRandomNumber(0);\n    setHint(\"Guess The Number!\");\n    setChances(10);\n    limitBeforeRef.current.style.flex = 0;\n    rangeRef.current.style.flex = 100 + \"%\";\n    limitAfterRef.current.style.flex = 0;\n  }\n\n  let mainMenuRef = useRef();\n  let difficultyRef = useRef();\n  let ingameRef = useRef();\n  let resultRef = useRef();\n\n  \n\n  function start(){\n    mainMenuRef.current.className = \"hide\";\n    difficultyRef.current.className = \"\";\n  }\n\n  function difficultyToIngame(){\n    difficultyRef.current.className = \"hide\";\n    ingameRef.current.className = \"\";\n  }\n\n  function ingameToResult(){\n    ingameRef.current.className = \"hide\";\n    resultRef.current.className = \"\";\n  }\n\n  function resultToMain(){\n    resultRef.current.className = \"hide\";\n    mainMenuRef.current.className = \"\";\n  }\n\n  let limitBeforeRef = useRef();\n  let limitAfterRef = useRef();\n  let rangeRef = useRef();\n\n  function updateRange(){\n    limitBeforeRef.current.style.flex = minRange + \"%\";\n    rangeRef.current.style.flex = maxRange - minRange + \"%\";\n    limitAfterRef.current.style.flex = difficultyValue - maxRange + \"%\";\n  }\n\n\n  return <div id=\"container\">\n\n    <MainMenu handleChange={changeUsername} mainMenuRef={mainMenuRef} start={start}/>\n    <DifficultyMenu \n    username={username} \n    difficulty={difficulty} \n    onClick={changeDifficulty}\n    changeDifficultyValue={changeDifficultyValue}\n    resetChances={resetChances}\n    difficultyRef={difficultyRef}\n    difficultyToIngame={difficultyToIngame}/>\n    <Ingame\n    ingameRef={ingameRef} \n    changeMin={changeMin} \n    changeMax={changeMax}\n    min={minRange} \n    max={maxRange} \n    difficulty={difficulty}\n    difficultyValue={difficultyValue}\n    randomNumber={randomNumber}\n    changeRandomNumber={changeRandomNumber}\n    chances={chances}\n    subtractChances={subtractChances}\n    userInput={userInput}\n    onChangeInput={onChangeInput}\n    setResultResponse={setResultResponse}\n    resetInput={resetInput}\n    hint={hint}\n    setHint={setHint}\n    ingameToResult={ingameToResult}\n    limitBeforeRef={limitBeforeRef}\n    rangeRef={rangeRef}\n    limitAfterRef={limitAfterRef}\n    updateRange={updateRange}\n    />\n    <Result \n    randomNumber={randomNumber} \n    resultResponse={resultResponse} \n    resultRef={resultRef}\n    resultToMain={resultToMain}\n    reset={reset}/>\n    \n  </div>\n\n}\n\n\n\nconst el = <App/>;\n\nReactDOM.render(el, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}